/*
 * Minimal QRCode generator (simplified).
 * Provides QRCode global with makeCode() to draw codes on a canvas.
 */
(function(){
  function QRCode(el, opts){
    if(typeof el === 'string') el = document.getElementById(el);
    this._el = el;
    this._opts = opts || {};
    this._opts.width = this._opts.width || 128;
    this._opts.height = this._opts.height || 128;
    if(this._opts.text){
      this.makeCode(this._opts.text);
    }
  }
  QRCode.CorrectLevel = {L:1,M:0,Q:3,H:2};
  QRCode.prototype.makeCode = function(text){
    var modules = buildMatrix(text);
    var size = modules.length;
    var scaleX = this._opts.width / size;
    var scaleY = this._opts.height / size;
    var canvas = document.createElement('canvas');
    canvas.width = this._opts.width;
    canvas.height = this._opts.height;
    var ctx = canvas.getContext('2d');
    ctx.fillStyle = '#fff';
    ctx.fillRect(0,0,canvas.width,canvas.height);
    ctx.fillStyle = '#000';
    for(var r=0;r<size;r++){
      for(var c=0;c<size;c++){
        if(modules[r][c]) ctx.fillRect(c*scaleX,r*scaleY,scaleX,scaleY);
      }
    }
    this._el.innerHTML='';
    this._el.appendChild(canvas);
  };

  function buildMatrix(text){
    var data=[];
    for(var i=0;i<text.length;i++) data.push(text.charCodeAt(i) & 0xff);
    var buffer=[];
    buffer.push(0x40 | (text.length>>4));
    buffer.push(((text.length&0xf)<<4) | (data[0]>>4));
    var idx=1,cur=data[0]&0xf;
    while(idx<data.length){
      buffer.push((cur<<4)|(data[idx]>>4));
      cur=data[idx]&0xf;idx++;
    }
    buffer.push(cur<<4);
    while(buffer.length<16) buffer.push(buffer.length%2?0x11:0xec);
    var ecc = rs(buffer,10);
    var codewords = buffer.concat(ecc);
    var size=21,modules=new Array(size);
    for(i=0;i<size;i++){modules[i]=new Array(size);for(var j=0;j<size;j++)modules[i][j]=null;}
    placeFinder(0,0,modules);placeFinder(size-7,0,modules);placeFinder(0,size-7,modules);
    for(i=8;i<size-8;i++){modules[6][i]=i%2===0;modules[i][6]=i%2===0;}
    modules[size-8][8]=true;
    var row=size-1,col=size-1,dir=-1,byteIdx=0,bitIdx=7;
    while(col>0){
      if(col===6) col--;
      for(var k=0;k<size;k++){
        var r=row+dir*k;
        for(var c=0;c<2;c++){
          var x=col-c,y=r;
          if(modules[y][x]==null){
            var bit=(codewords[byteIdx]>>>bitIdx)&1;
            modules[y][x]=((x+y)%2===0)?!bit:bit;
            bitIdx--;
            if(bitIdx<0){byteIdx++;bitIdx=7;}
          }
        }
      }
      row+=dir*(size-1);dir=-dir;col-=2;
    }
    var format=0b101010000010010;
    for(i=0;i<15;i++){
      var b=(format>>>i)&1;
      if(i<6) modules[i][8]=b; else if(i<8) modules[i+1][8]=b; else modules[size-15+i][8]=b;
      if(i<8) modules[8][size-1-i]=b; else if(i<9) modules[8][15-i]=b; else modules[8][14-i]=b;
    }
    return modules;
  }
  function placeFinder(r,c,m){
    for(var i=-1;i<8;i++){
      for(var j=-1;j<8;j++){
        var y=r+i,x=c+j;
        if(y<0||x<0||y>=m.length||x>=m.length) continue;
        if((i>=0&&i<=6&&(j==0||j==6))||(j>=0&&j<=6&&(i==0||i==6))||(i>=2&&i<=4&&j>=2&&j<=4)) m[y][x]=true; else m[y][x]=false;
      }
    }
  }
  var GF256_EXP=new Array(512),GF256_LOG=new Array(256);
  (function(){
    var x=1;for(var i=0;i<255;i++){GF256_EXP[i]=x;GF256_LOG[x]=i;x<<=1;if(x&0x100)x^=0x11d;}for(i=255;i<512;i++)GF256_EXP[i]=GF256_EXP[i-255];
  })();
  function rs(data,ec){
    var poly=[1];
    for(var i=0;i<ec;i++) poly=polyMul(poly,[1,GF256_EXP[i]]);
    var buf=data.slice();
    for(i=0;i<ec;i++) buf.push(0);
    for(i=0;i<data.length;i++){
      var coef=buf[i];
      if(coef!==0){
        var log=GF256_LOG[coef];
        for(var j=0;j<poly.length;j++) buf[i+j]^=GF256_EXP[log+GF256_LOG[poly[j]]];
      }
    }
    return buf.slice(data.length);
  }
  function polyMul(a,b){
    var res=new Array(a.length+b.length-1).fill(0);
    for(var i=0;i<a.length;i++) for(var j=0;j<b.length;j++) if(a[i]&&b[j]) res[i+j]^=GF256_EXP[GF256_LOG[a[i]]+GF256_LOG[b[j]]];
    return res;
  }
  window.QRCode=QRCode;
})();
